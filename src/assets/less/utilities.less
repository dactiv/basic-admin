@import "~ant-design-vue/lib/style/themes/default";

@border-radius-md: @border-radius-sm + @border-radius-base;
@border-radius-lg: @border-radius-md + @border-radius-sm;

// stylelint-disable declaration-no-important, at-rule-no-vendor-prefix

//
// Responsive: Utility classes
// --------------------------------------------------


// IE10 in Windows (Phone) 8
//
// Support for responsive views via media queries is kind of borked in IE10, for
// Surface/desktop in split view and for Windows Phone 8. This particular fix
// must be accompanied by a snippet of JavaScript to sniff the user agent and
// apply some conditional CSS to *only* the Surface/desktop Windows 8. Look at
// our Getting Started page for more information on this bug.
//
// For more information, see the following:
//
// Issue: https://github.com/twbs/bootstrap/issues/10497
// Docs: https://getbootstrap.com/docs/3.4/getting-started/#support-ie10-width
// Source: https://timkadlec.com/2013/01/windows-phone-8-and-device-width/
// Source: https://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/
// Extra small screen / phone
//** Deprecated `@screen-xs` as of v3.0.1
@screen-xs:                  480px;
//** Deprecated `@screen-xs-min` as of v3.2.0
@screen-xs-min:              @screen-xs;
//** Deprecated `@screen-phone` as of v3.0.1
@screen-phone:               @screen-xs-min;

// Small screen / tablet
//** Deprecated `@screen-sm` as of v3.0.1
@screen-sm:                  768px;
@screen-sm-min:              @screen-sm;
//** Deprecated `@screen-tablet` as of v3.0.1
@screen-tablet:              @screen-sm-min;

// Medium screen / desktop
//** Deprecated `@screen-md` as of v3.0.1
@screen-md:                  992px;
@screen-md-min:              @screen-md;
//** Deprecated `@screen-desktop` as of v3.0.1
@screen-desktop:             @screen-md-min;

// Large screen / wide desktop
//** Deprecated `@screen-lg` as of v3.0.1
@screen-lg:                  1200px;
@screen-lg-min:              @screen-lg;
//** Deprecated `@screen-lg-desktop` as of v3.0.1
@screen-lg-desktop:          @screen-lg-min;

// So media queries don't overlap when required, provide a maximum
@screen-xs-max:              (@screen-sm-min - 1);
@screen-sm-max:              (@screen-md-min - 1);
@screen-md-max:              (@screen-lg-min - 1);

.responsive-visibility() {
  display: block !important;
  table&  { display: table !important; }
  tr&     { display: table-row !important; }
  th&,
  td&     { display: table-cell !important; }
}

.responsive-invisibility() {
  display: none !important;
}

.padding-size(@name, @size) {
  @name:@size
}


// Visibility utilities
// Note: Deprecated .visible-xs, .visible-sm, .visible-md, and .visible-lg as of v3.2.0
.visible-xs,
.visible-sm,
.visible-md,
.visible-lg {
  .responsive-invisibility();
}

.visible-xs-block,
.visible-xs-inline,
.visible-xs-inline-block,
.visible-sm-block,
.visible-sm-inline,
.visible-sm-inline-block,
.visible-md-block,
.visible-md-inline,
.visible-md-inline-block,
.visible-lg-block,
.visible-lg-inline,
.visible-lg-inline-block {
  display: none !important;
}

.visible-xs {
  @media (max-width: @screen-xs-max) {
    .responsive-visibility();
  }
}
.visible-xs-block {
  @media (max-width: @screen-xs-max) {
    display: block !important;
  }
}
.visible-xs-inline {
  @media (max-width: @screen-xs-max) {
    display: inline !important;
  }
}
.visible-xs-inline-block {
  @media (max-width: @screen-xs-max) {
    display: inline-block !important;
  }
}

.visible-sm {
  @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
    .responsive-visibility();
  }
}
.visible-sm-block {
  @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
    display: block !important;
  }
}
.visible-sm-inline {
  @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
    display: inline !important;
  }
}
.visible-sm-inline-block {
  @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
    display: inline-block !important;
  }
}

.visible-md {
  @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
    .responsive-visibility();
  }
}
.visible-md-block {
  @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
    display: block !important;
  }
}
.visible-md-inline {
  @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
    display: inline !important;
  }
}
.visible-md-inline-block {
  @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
    display: inline-block !important;
  }
}

.visible-lg {
  @media (min-width: @screen-lg-min) {
    .responsive-visibility();
  }
}
.visible-lg-block {
  @media (min-width: @screen-lg-min) {
    display: block !important;
  }
}
.visible-lg-inline {
  @media (min-width: @screen-lg-min) {
    display: inline !important;
  }
}
.visible-lg-inline-block {
  @media (min-width: @screen-lg-min) {
    display: inline-block !important;
  }
}

.hidden-xs {
  @media (max-width: @screen-xs-max) {
    .responsive-invisibility();
  }
}
.hidden-sm {
  @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) {
    .responsive-invisibility();
  }
}
.hidden-md {
  @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
    .responsive-invisibility();
  }
}
.hidden-lg {
  @media (min-width: @screen-lg-min) {
    .responsive-invisibility();
  }
}


// Print utilities
//
// Media queries are placed on the inside to be mixin-friendly.

// Note: Deprecated .visible-print as of v3.2.0
.visible-print {
  .responsive-invisibility();

  @media print {
    .responsive-visibility();
  }
}
.visible-print-block {
  display: none !important;

  @media print {
    display: block !important;
  }
}
.visible-print-inline {
  display: none !important;

  @media print {
    display: inline !important;
  }
}
.visible-print-inline-block {
  display: none !important;

  @media print {
    display: inline-block !important;
  }
}

.hidden-print {
  @media print {
    .responsive-invisibility();
  }
}

.padding {
  padding: @padding-sm!important;
  &-top {
    padding-top: @padding-sm!important;
  }
  &-bottom {
    padding-bottom: @padding-sm!important;
  }
  &-left {
    padding-left: @padding-sm!important;
  }
  &-right {
    padding-right: @padding-sm!important;
  }

  &-lg {
    padding: @padding-lg!important;
    &-top {
      padding-top: @padding-lg!important;
    }
    &-bottom {
      padding-bottom: @padding-lg!important;
    }
    &-left {
      padding-left: @padding-lg!important;
    }
    &-right {
      padding-right: @padding-lg!important;
    }
  }

  &-md {
    padding: @padding-md!important;
    &-top {
      padding-top: @padding-md!important;
    }
    &-bottom {
      padding-bottom: @padding-md!important;
    }
    &-left {
      padding-left: @padding-md!important;
    }
    &-right {
      padding-right: @padding-md!important;
    }
  }

  &-xs {
    padding: @padding-xs!important;
    &-top {
      padding-top: @padding-xs!important;
    }
    &-bottom {
      padding-bottom: @padding-xs!important;
    }
    &-left {
      padding-left: @padding-xs!important;
    }
    &-right {
      padding-right: @padding-xs!important;
    }
  }

  &-xss {
    padding: @padding-xss!important;
    &-top {
      padding-top: @padding-xss!important;
    }
    &-bottom {
      padding-bottom: @padding-xss!important;
    }
    &-left {
      padding-left: @padding-xss!important;
    }
    &-right {
      padding-right: @padding-xss!important;
    }
  }

  &-none {
    padding: 0;
  }

}

.margin {

  margin: @margin-sm!important;

  &-top {
    margin-top: @margin-sm!important;
  }
  &-bottom {
    margin-bottom: @margin-sm!important;
  }
  &-left {
    margin-left: @margin-sm!important;
  }
  &-right {
    margin-right: @margin-sm!important;
  }

  &-lg {
    margin: @margin-lg!important;
    &-top {
      margin-top: @margin-lg!important;
    }
    &-bottom {
      margin-bottom: @margin-lg!important;
    }
    &-left {
      margin-left: @margin-lg!important;
    }
    &-right {
      margin-right: @margin-lg!important;
    }
  }

  &-md {
    margin: @margin-md!important;
    &-top {
      margin-top: @margin-md!important;
    }
    &-bottom {
      margin-bottom: @margin-md!important;
    }
    &-left {
      margin-left: @margin-md!important;
    }
    &-right {
      margin-right: @margin-md!important;
    }
  }

  &-xs {
    margin: @margin-xs!important;
    &-top {
      margin-top: @margin-xs!important;
    }
    &-bottom {
      margin-bottom: @margin-xs!important;
    }
    &-left {
      margin-left: @margin-xs!important;
    }
    &-right {
      margin-right: @margin-xs!important;
    }
  }

  &-xss {
    margin: @margin-xss!important;
    &-top {
      margin-top: @margin-xss!important;
    }
    &-bottom {
      margin-bottom: @margin-xss!important;
    }
    &-left {
      margin-left: @margin-xss!important;
    }
    &-right {
      margin-right: @margin-xss!important;
    }
  }

  &-none {
    margin: 0!important;
  }
}

.overflow{
  &-hidden {
    overflow: hidden!important;
  }
  &-auto {
    overflow: auto!important;
  }
}

.float {
  &-right {
    float: right!important;
  }
  &-left {
    float: left!important;
  }
}

.text {
  &-center {
    text-align: center!important;
  }
  &-right {
    text-align: right !important;
  }
  &-left {
    text-align: left!important;
  }
}

.border-radius {
  border-radius: @border-radius-sm!important;
  &-none {
    border-radius:0;
  }
  &-md {
    border-radius: @border-radius-md!important;
  }
  &-lg {
    border-radius: @border-radius-lg!important;
  }
}

.border {
  border: @border-width-base @border-style-base @border-color-base!important;
  &-top {
    border-top: @border-width-base @border-style-base @border-color-base!important;
  }
  &-bottom {
    border-bottom: @border-width-base @border-style-base @border-color-base!important;
  }
  &-right {
    border-right: @border-width-base @border-style-base @border-color-base!important;
  }
  &-left {
    border-left: @border-width-base @border-style-base @border-color-base!important;
  }
}

.align-items-center {
  -webkit-box-align: center!important;
  -ms-flex-align: center!important;
  align-items: center!important;
}

.display-flex {
  display: flex!important;
}

.display-block {
  display: block!important;
}

.justify-content-center {
  -webkit-box-pack: center!important;
  -ms-flex-pack: center!important;
  justify-content: center!important;
}

.font-size {
  font-size: @font-size-base!important;
  &-lg {
    font-size: @font-size-lg!important;
  }
  &-sm {
    font-size: @font-size-sm!important;
  }
}

.height-100-percent {
  height: 100% !important;
}

.width-100-percent {
  width: 100% !important;
}

.basic-box-shadow {
  box-shadow: 0 2px 12px 0 fade(@black, 10%);
}